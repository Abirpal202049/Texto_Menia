{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","titleText","type","id","onClick","change","htmlFor","toggletext","defaultProps","aboutText","Textform","useState","Text","setText","searchtext","setSearchtext","decision","setDecision","boxheading","rows","value","onChange","event","target","placeholder","newtext","toUpperCase","toLowerCase","ntext","replace","trim","length","split","arr","key","flag","i","Alert","role","text","App","setMode","alert","setAlert","toggle","document","body","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a84ed29.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types' // import proptype\r\n\r\n\r\n\r\nexport default function Navbar(props) { // Default Export\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.titleText}</a> {/* Using the props */}\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                    </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'dark' ? 'light' : 'dark'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.change} id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.toggletext}</label>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\n// proptypes\r\nNavbar.propTypes = {\r\n    titleText : PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string.isRequired\r\n}\r\n\r\n// Default props\r\nNavbar.defaultProps = {\r\n    titleText : \"Set Title Here\",\r\n    aboutText : \"About Us\"\r\n}","import React, {useState} from 'react' // useState is a Hook(React Hooks)\r\nimport PropTypes from 'prop-types'\r\n// import reactDom from 'react-dom';\r\nimport './Transform.css';\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n\r\n    // const [state, setState] = useState(initialState)\r\n    const [Text, setText] = useState(''); // STATE VARIABLE\r\n\r\n    // Text = \"New Text \"; // Wrong way to change the state\r\n    // setText(\"Updating the text\"); // Correct way of changing the state \r\n\r\n    const Clicktouppercase =() => {\r\n        // console.log(\"Upper Case Is Clicked\" + Text);\r\n        let newtext = Text.toUpperCase();\r\n        setText(newtext);\r\n    }\r\n    const Clicktolowercase = ()=>{\r\n        let newtext = Text.toLowerCase();\r\n        setText(newtext);\r\n    }\r\n    const Clicktoclear = ()=>{\r\n        let newtext = '';\r\n        setText(newtext);\r\n    }\r\n    const RandomText = ()=>{\r\n        let randtext = `Lorem ipsum dolor sit amet consectetur adipisicing elit. Animi, adipisci quas explicabo optio exercitationem earum ea incidunt, voluptas vitae consectetur pariatur facere ullam nisi distinctio eaque sequi odio mollitia omnis. Recusandae, eum eius. Aliquam quae ipsa velit dolorem. At harum ipsa nostrum consequatur optio non esse, itaque pariatur excepturi assumenda molestias facere quisquam tempore iusto fugit placeat ut maiores cum voluptates ratione, saepe odio perspiciatis. Optio placeat qui blanditiis architecto necessitatibus quis enim iure impedit molestiae labore repellendus minus doloremque sequi dolor, nihil vitae eum facilis soluta voluptates autem officia. Nemo illo ipsum earum magni veniam voluptatibus debitis dicta quae.`\r\n        setText(randtext);\r\n    }\r\n    const RemoveSpace = ()=>{\r\n        let ntext = Text.replace(/\\s+/g, ' ').trim()\r\n        setText(ntext);\r\n    }\r\n\r\n\r\n    const handelonchangeClick =(event) => {\r\n        // console.log(\"handelonchangeClick function is triggered now\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    // Search Funchinility\r\n    const [searchtext, setSearchtext] = useState(\"\")\r\n    const [decision, setDecision] = useState('')\r\n    const handelonchangeClicksearch =(event) => {\r\n        setSearchtext(event.target.value);\r\n    }\r\n    const searchup = () =>{\r\n        let arr = Text.split(\" \");\r\n        let key =  searchtext;\r\n        let flag = -2;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if(key === arr[i]){\r\n                flag = i;\r\n                break;\r\n            }\r\n            else{\r\n                flag = -1;\r\n            }\r\n        }\r\n        if (flag === -1) {\r\n            setDecision(\"❌ The Word Is Not Present\");\r\n        }\r\n        else{\r\n            setDecision(`✅ The Word \"${searchtext}\" Is Present At Position ${flag + 1}`);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container my-4\">\r\n                <h1>{props.boxheading}</h1>\r\n                <div className=\"mb-3 my-3\">\r\n                    <textarea className=\"form-control\" id=\"text\" rows=\"8\" value={Text} onChange={handelonchangeClick} placeholder=\"Enter your text here ...\"></textarea>\r\n                </div>\r\n                \r\n                <button type=\"button\" className={`btn btn-${props.mode === 'dark' ? 'primary' : 'dark'} mx-1 my-1`} onClick={Clicktouppercase} >Convert To Uppercase</button>\r\n                <button type=\"button\" className={`btn btn-${props.mode === 'dark' ? 'primary' : 'dark'} mx-1 my-1`} onClick={Clicktolowercase}>Convert To Lowercase</button>\r\n                <button type=\"button\" className={`btn btn-${props.mode === 'dark' ? 'primary' : 'dark'} mx-1 my-1`} onClick={Clicktoclear}>Clear Text</button>\r\n                <button type=\"button\" className={`btn btn-${props.mode === 'dark' ? 'primary' : 'dark'} mx-1 my-1`} onClick={RandomText}>Generate Random Text</button>\r\n                <button type=\"button\" className={`btn btn-${props.mode === 'dark' ? 'primary' : 'dark'} mx-1 my-1`} onClick={RemoveSpace}>Remove Extra Space From Text</button>\r\n                {/* <button type=\"button\" className={`btn btn-${props.mode === 'dark' ? 'primary' : 'dark'} mx-1 my-1`} onClick={Capitalize}>Convert To Camel Case</button> */}\r\n                <hr />\r\n\r\n                <div className=\"container my-3 meniaflex\">\r\n                    <div className=\"container\">\r\n                    <h2 className=\"meniaflexHeading\">Your Text Summary</h2>\r\n                    <div className=\"container my-3\">\r\n                        <h6>Charecter With Space : <span>{Text.length} Charecter</span> </h6>\r\n                        <h6>Charecter : <span>{Text === '' ? \"0\" : (Text.length - ((Text === '' ? \"0\" :(Text.split(' ').length)) - 1))} Charecter</span> </h6>\r\n                        <h6>Words : <span>{Text === '' ? \"0\" :(Text.replace(/\\s+/g, ' ').trim().split(' ').length)} Words</span></h6>\r\n                        {/* https://stackoverflow.com/questions/16974664/how-to-remove-the-extra-spaces-in-a-string */}\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <h2 className=\"meniaflexHeading searchheading\"><label htmlFor=\"searchword\">Enter the word you want to Search </label></h2>\r\n                        <form className=\"d-flex my-3\">\r\n                            \r\n                            <input rows=\"1\" value={searchtext} onChange={handelonchangeClicksearch} type=\"search\" className=\"form-control me-2\"  id=\"searchword\" placeholder=\"Enter the word you want to find from the above text\"/>\r\n                            \r\n                            <button type=\"button\" onClick={searchup} className={`btn btn-${props.mode === 'dark' ? 'success' : 'dark'} mx-2 ${searchtext === \"\" ? \"disabled\" : \"\"}`} >Search</button>\r\n                        </form>\r\n                        <h5>{decision}</h5>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className=\"container my-3\">\r\n                    <h2>Preview Text</h2>\r\n                    <p>{Text === '' ? \"Type Your Text Above To Preview Here....\" : Text}</p>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nTextform.propTypes = {\r\n    boxheading : PropTypes.string.isRequired\r\n}\r\n\r\nTextform.defaultProps = {\r\n    boxheading : \"Enter your title for the TextArea\"\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>Success! </strong>{props.text}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n\n\n\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [text, setText] = useState('Enable Dark Mode')\n  const [alert, setAlert] = useState('Light Mode Enabled Successfully')\n  const toggle = ()=>{\n    if(mode === 'dark'){\n      setMode('light');\n      setText('Enable Dark Mode')\n      document.body.style.backgroundColor = 'white'\n      document.body.style.color = '#1f1f1f'\n      setAlert('Light Mode Enabled Successfully')\n      \n    }\n    else{\n      setMode('dark');\n      setText('Enable Light Mode')\n      document.body.style.backgroundColor = '#1f1f1f'\n      document.body.style.color = 'white'\n      setAlert('Dark Mode Enabled Successfully')\n    }\n  }\n\n\n  return (\n    <>\n      <Navbar titleText = \"Texto_Menia\" mode ={mode} change={toggle} toggletext = {text}/> \n      <Alert mode ={mode} text = {alert}/>\n      <Textform boxheading=\"Enter Your Text Below To Analyse\" mode = {mode} change={toggle}/>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}